#!/usr/bin/python

import os
from pwn import process, context
from glob import glob

context.log_level = 'error'
HOME = '/home/bbbig/capstone'

class Exploitability(object):

  def __init__(self, bin_path, crash_info_folder):
    
    self.bin_path = bin_path
    self.crash_folder = crash_info_folder

    gdb_cmd = 'gdb -q %s'%self.bin_path
    self.gdb = process(gdb_cmd.split(' '))


  def gdb_delim(self):
    return self.gdb.recvuntil('(gdb) ')

  def work(self):
    
    self.gdb_delim()
    input_path = os.path.join(self.crash_folder, 'input')
    self.gdb.sendline('r < %s'%input_path)
    self.gdb_delim()
    self.gdb.sendline('exploit')
    out = self.gdb_delim()
    try: 
      evaluation = out.split('Exploitability Classification: ')[1].split('\n')[0]
      print evaluation
      if evaluation == 'EXPLOITABLE':
        self.exploitable = 1
      else:
        self.exploitable = 0
    except:
      print 'UNEXPLOITABLE'
      self.exploitable = 0

    exploitable_path = os.path.join(self.crash_folder, 'exploitability')
    open(exploitable_path, 'w').write(str(self.exploitable))



if __name__ == '__main__':

  res_folder = os.path.join(HOME, 'res')
  crashes = glob(res_folder + '/*/crash*')

  for crash in crashes:
    bin_folder = crash[:crash.rfind('/')]
    bin_name = os.path.basename(bin_folder)
    bin_path = os.path.join(bin_folder, bin_name)
    e = Exploitability(bin_path, crash)
    e.work()
